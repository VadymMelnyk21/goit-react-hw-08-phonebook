{"version":3,"file":"static/js/789.b335c1ad.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n","import styled from '@emotion/styled';\n\nexport const FormContainer = styled.div`\n  padding-bottom: 30px;\n  border-bottom: 1px solid #aaa;\n`;\nexport const InputContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 15px;\n`;\n\nexport const LableText = styled.span`\n  display: block;\n  margin: 0 0 10px;\n`;\n\nexport const Input = styled.input`\n  width: 180px;\n  padding: 5px;\n  border: 1px solid #555;\n  border-radius: 3px;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  padding: 5px 15px;\n  margin: 0 auto;\n  background-color: #fff;\n  border: 1px solid #747474;\n  border-radius: 5px;\n  font-weight: 700;\n  color: #555;\n  cursor: pointer;\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.3);\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from 'redux/contacts/contacts-requests';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\nimport {\n  Button,\n  FormContainer,\n  Input,\n  InputContainer,\n  LableText,\n} from './ContactForm.styled';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const changeName = e => setName(e.target.value);\n  const changeNumber = e => setNumber(e.target.value);\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      name,\n      number,\n    };\n\n    contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())\n      ? Notify.warning(`${name} вже є у ваших контактах`)\n      : dispatch(addContactThunk(newContact));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormContainer>\n      <form onSubmit={handlerSubmit}>\n        <InputContainer>\n          <label>\n            <LableText>Ім’я контакту</LableText>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={changeName}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              placeholder=\"Ім’я Прізвище\"\n              autoComplete=\"off\"\n            />\n          </label>\n          <label>\n            <LableText>Номер</LableText>\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={changeNumber}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              placeholder=\"000-00-00\"\n              autoComplete=\"off\"\n            />\n          </label>\n        </InputContainer>\n        <Button type=\"submit\">Додати контакт</Button>\n      </form>\n    </FormContainer>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  margin-bottom: 7px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const ItemContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 15px;\n  background-color: #fff;\n  border: 1px solid #747474;\n  border-radius: 5px;\n  font-size: 12px;\n  font-weight: 700;\n  color: #555;\n  cursor: pointer;\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.3);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContactThunk } from 'redux/contacts/contacts-requests';\nimport { ItemContainer, Button, Item } from './ContactItem.styled';\n\nexport default function ContactItem({ name, number, contactId }) {\n  const dispatch = useDispatch();\n\n  return (\n    <Item>\n      <ItemContainer>\n        <div>\n          <span>{name}: </span>\n          <span>{number}</span>\n        </div>\n        <Button\n          type=\"button\"\n          onClick={() => dispatch(deleteContactThunk(contactId))}\n        >\n          Видалити\n        </Button>\n      </ItemContainer>\n    </Item>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  contactId: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin: 20px 0 0;\n  padding-left: 20px;\n`;\n\nexport const Error = styled.li`\n  text-align: center;\n  color: #5db09d;\n  list-style: none;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContactsThunk } from 'redux/contacts/contacts-requests';\nimport { getContacts, getFilter } from 'redux/contacts/contacts-selectors';\nimport ContactItem from '../ContactItem/ContactItem';\nimport { Error, List } from './ContactList.styled';\n\nexport default function ContactList() {\n  const data = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const filterList = () => {\n    const normalValue = filter.toLowerCase().trim();\n    return data.filter(contact =>\n      contact.name.toLowerCase().includes(normalValue)\n    );\n  };\n\n  const contactsList = filterList();\n\n  return (\n    <List>\n      {contactsList.length > 0 ? (\n        contactsList.map(({ id, name, number }) => {\n          return (\n            <ContactItem key={id} name={name} number={number} contactId={id} />\n          );\n        })\n      ) : (\n        <Error>\n          <strong>Упс, нічого нема</strong>\n        </Error>\n      )}\n    </List>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.div`\n  width: 388px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 5px;\n  border: 1px solid #555;\n  border-radius: 3px;\n`;\n\nexport const Text = styled.p`\n  margin: 0 0 10px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/contacts/contacts-slice';\nimport { FilterContainer, Input, Text } from './Filter.styled';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e => dispatch(filterContact(e.target.value));\n\n  return (\n    <FilterContainer>\n      <Text>Пошук контакту за іменем</Text>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleChangeFilter}\n        placeholder=\"Ім’я Прізвище\"\n      />\n    </FilterContainer>\n  );\n}\n","import styled from '@emotion/styled/';\n\nexport const Container = styled.div`\n  width: 400px;\n  margin: 40px auto 0;\n  padding: 30px;\n  background-color: #fff;\n  box-shadow: 0px 0px 10px 5px rgba(0, 0, 0, 0.3);\n`;\n\nexport const TitleH = styled.h1`\n  text-align: center;\n  color: #353535;\n`;\n\nexport const TitleH2 = styled.h2`\n  margin-top: 30px;\n  text-align: center;\n  color: #353535;\n`;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Container, TitleH, TitleH2 } from './ContactsPage.styled';\n\nexport default function ContactsPage() {\n  return (\n    <Container>\n      <TitleH>Книга контактів</TitleH>\n      <ContactForm />\n\n      <TitleH2>Контакти</TitleH2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getFilter","filter","FormContainer","styled","InputContainer","LableText","Input","Button","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","reset","onSubmit","e","preventDefault","newContact","find","contact","toLowerCase","Notify","addContactThunk","type","value","onChange","target","pattern","title","required","placeholder","autoComplete","Item","ItemContainer","ContactItem","contactId","onClick","deleteContactThunk","List","Error","ContactList","data","useEffect","getContactsThunk","contactsList","normalValue","trim","includes","filterList","length","map","id","FilterContainer","Text","Filter","filterContact","Container","TitleH","TitleH2","ContactsPage"],"sourceRoot":""}